<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:context="http://www.springframework.org/schema/context" 
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.1.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd"
		>
	
	<context:property-placeholder location="memcached.properties" />
		
	<bean id="memcachedClientBuilder" class="net.rubyeye.xmemcached.XMemcachedClientBuilder" >
		<constructor-arg>
			<list>
				<bean class="java.net.InetSocketAddress">
					<constructor-arg value="${memcached.server1.host}"></constructor-arg>
					<constructor-arg value="${memcached.server1.port}"></constructor-arg>
				</bean>
				<bean class="java.net.InetSocketAddress">
					<constructor-arg value="${memcached.server2.host}"></constructor-arg>
					<constructor-arg value="${memcached.server2.port}"></constructor-arg>
				</bean> 
			</list>
		</constructor-arg>
		
		<!-- weights -->
		<constructor-arg>
			<list>
				<value>${memcached.server1.weight}</value>
				<value>${memcached.server2.weight}</value> 
			</list>
		</constructor-arg>
		<!-- 设置连接池大小，即客户端个数-->
		<property name="connectionPoolSize" value="${memcached.connectionPoolSize}"></property>
		<property name="commandFactory">
			<bean class="net.rubyeye.xmemcached.command.TextCommandFactory"></bean>
		</property>
		<property name="sessionLocator"><!-- 使用一致性哈希算法 -->
			<bean class="net.rubyeye.xmemcached.impl.KetamaMemcachedSessionLocator"></bean>
		</property> 
		<!-- <property name="sessionLocator">使用选举散列算法
			<bean class="net.rubyeye.xmemcached.impl.ElectionMemcachedSessionLocator"></bean>
		</property> -->
		<!-- 通信编码方式 -->
		<property name="transcoder">
			<bean class="net.rubyeye.xmemcached.transcoders.SerializingTranscoder" />
		</property>
	</bean>
	<!-- Use factory bean to build memcached client -->
	<bean id="memcachedClient" factory-bean="memcachedClientBuilder" factory-method="build" destroy-method="shutdown" >
			<property name="opTimeout" value="${memcached.opTimeout}"></property>	
			<!-- Failure mode -->
            <property name="failureMode" value="true"/>
	</bean>

</beans>